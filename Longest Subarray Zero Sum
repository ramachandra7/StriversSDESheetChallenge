##Brute:
find all sub arrrays, then find sum 0 and then find maxlength
TC: O(N**2)
SC: O(1)


##Optimal:

TC: O(N)
SC: O(N)


#include <bits/stdc++.h>

int LongestSubsetWithZeroSum(vector<int> arr) {

  // Write your code here
  int n = arr.size(), i, ans, diff;
  for (i = 1; i < n; i++) {
    arr[i] = arr[i] + arr[i - 1];
  }

  map<int, int> mp;
  mp[0] = -1;
  ans = 0;
  for (i = 0; i < n; i++) {

    if (mp.find(arr[i]) != mp.end()) {
      diff = i - mp[arr[i]];
      ans = max(ans, diff);
    } else {
      mp[arr[i]] = i;
    }
  }

  return ans;
}
