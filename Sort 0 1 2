##BRUTE:
sorting 
TC:O(NlogN)
SC: O(N) -> merge , O(1) quick


##better:

count and assign
TC: O(2*N) 2 traversals
SC: O(1)



##optimal:
SC: O(1)
TC: O(1)

#include <bits/stdc++.h> 
void sort012(int *arr, int n)
{
   //   Write your code here


// intuiton behind algo
   // 0 0 0     1 1 1 1 1      ..............     2 2 2 2 2 
   //     l-1   l       m-1    m            h   h+1


   int low=0,mid=0,high=n-1;
   while(mid<=high){
      if(arr[mid]==0){
         swap(arr[low],arr[mid]);
         low++;
         mid++;
      }
      else if(arr[mid]==1)
      {
         mid++;
      }
      else{
         swap(arr[high],arr[mid]);
         high--;
      }
   }
}
